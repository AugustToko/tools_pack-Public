/*
 * Project: tools_pack Public
 * Module: toolspack_android
 * Last Modified: 21-1-16 下午12:40
 * Copyright (c) 2021 August https://blog.geek-cloud.top/
 */

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def localKeyProperties = new Properties()
def localKeyPropertiesFile = rootProject.file('D:\\AndroidStudio_KEY_Store\\keystore.properties')
if (localKeyPropertiesFile.exists()) {
    localKeyPropertiesFile.withReader('UTF-8') { reader ->
        localKeyProperties.load(reader)
    }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion 30

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        applicationId "com.toolshouse.toolspack"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 2
        versionName "0.0.8"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
//        ndk {
            //选择要添加的对应 cpu 类型的 .so 库。
//            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a'
//        }
    }
    signingConfigs {
        release4GooglePlay {
            storeFile file('D:\\AndroidStudio_KEY_Store\\as\\chenlongcould4googleplay.jks')
            keyAlias localKeyProperties.getProperty('keyAlias')
            storePassword localKeyProperties.getProperty('storePassword')
            keyPassword localKeyProperties.getProperty('keyPassword')
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release4GooglePlay
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
//            minifyEnabled true
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }
}

//kotlin {
//    experimental {
//        coroutines 'enable'
//    }
//}

flutter {
    source '../..'
}

dependencies {
    //    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation 'com.google.firebase:firebase-analytics:17.5.0'
    implementation files('libs/taobao-sdk-java-auto_1587789137725-20200425.jar')
    implementation "org.java-websocket:Java-WebSocket:1.5.1"
    implementation files('libs/miit_mdid_1.0.10.aar')
//    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.0'
//    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.0'
}
